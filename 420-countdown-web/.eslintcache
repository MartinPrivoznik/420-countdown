[{"C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\index.js":"1","C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\reportWebVitals.js":"2","C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\App.js":"3","C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\components\\Time\\Time.js":"4","C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\models\\TimeModel.js":"5","C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\components\\TopBar\\TopBar.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":338,"mtime":1609726900441,"results":"10","hashOfConfig":"8"},{"size":2833,"mtime":1609725265914,"results":"11","hashOfConfig":"8"},{"size":516,"mtime":1609725247063,"results":"12","hashOfConfig":"8"},{"size":242,"mtime":1609729477854,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"152wiok",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\index.js",[],["29","30"],"C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\reportWebVitals.js",[],"C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\App.js",["31"],"import Time from \"./components/Time/Time\";\r\nimport TopBar from \"./components/TopBar/TopBar\";\r\nimport leaf from \"./images/leaf.png\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <img src={leaf} className=\"Leaf\" />\r\n      <TopBar />\r\n      <Time />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\components\\Time\\Time.js",["32","33"],"import React from \"react\";\r\nimport cls from \"./Time.module.css\";\r\nimport TimeModel from \"../../models/TimeModel\";\r\n\r\nconst { useState, useEffect } = React;\r\n\r\nconst Time = () => {\r\n  const [countdownDate, setCountdownDate] = useState(null);\r\n\r\n  const [state, setState] = useState({\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (countdownDate) {\r\n      setInterval(() => updateCountdown(), 1000);\r\n    }\r\n    setCountdownDate(TimeModel.getCountdownDateTime());\r\n  }, [countdownDate]);\r\n\r\n  const updateCountdown = () => {\r\n    if (countdownDate) {\r\n      // Get the current time\r\n\r\n      const currentTime = new Date().getTime();\r\n\r\n      // Get the time remaining until the countdown date\r\n      const distanceToDate = countdownDate - currentTime;\r\n\r\n      // Calculate days, hours, minutes and seconds remaining\r\n      let days = Math.floor(distanceToDate / (1000 * 60 * 60 * 24));\r\n      let hours = Math.floor((distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      let minutes = Math.floor((distanceToDate % (1000 * 60 * 60)) / (1000 * 60));\r\n      let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\r\n\r\n      // For visual appeal, add a zero to each number that's only one digit\r\n      const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n      if (numbersToAddZeroTo.includes(hours)) {\r\n        hours = `0${hours}`;\r\n      } else if (numbersToAddZeroTo.includes(minutes)) {\r\n        minutes = `0${minutes}`;\r\n      } else if (numbersToAddZeroTo.includes(seconds)) {\r\n        seconds = `0${seconds}`;\r\n      }\r\n\r\n      // Set the state to each new time\r\n      setState({ days: days, hours: hours, minutes, seconds });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"countdown-wrapper\">\r\n        <div className=\"time-section\">\r\n          <div className=\"time\">{state.days || \"0\"}</div>\r\n          <small className=\"time-text\">Days</small>\r\n        </div>\r\n        <div className=\"time-section\">\r\n          <div className=\"time\">:</div>\r\n        </div>\r\n        <div className=\"time-section\">\r\n          <div className=\"time\">{state.hours || \"00\"}</div>\r\n          <small className=\"time-text\">Hours</small>\r\n        </div>\r\n        <div className=\"time-section\">\r\n          <div className=\"time\">:</div>\r\n        </div>\r\n        <div className=\"time-section\">\r\n          <div className=\"time\">{state.minutes || \"00\"}</div>\r\n          <small className=\"time-text\">Minutes</small>\r\n        </div>\r\n        <div className=\"time-section\">\r\n          <div className=\"time\">:</div>\r\n        </div>\r\n        <div className=\"time-section\">\r\n          <div className=\"time\">{state.seconds || \"00\"}</div>\r\n          <small className=\"time-text\">Seconds</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n","C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\models\\TimeModel.js",[],"C:\\Development\\OwnWork\\420-countdown\\420-countdown-web\\src\\components\\TopBar\\TopBar.js",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":9,"column":7,"nodeType":"42","endLine":9,"endColumn":42},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":11},{"ruleId":"47","severity":1,"message":"48","line":22,"column":6,"nodeType":"49","endLine":22,"endColumn":21,"suggestions":"50"},{"ruleId":"43","severity":1,"message":"51","line":6,"column":10,"nodeType":"45","messageId":"46","endLine":6,"endColumn":23},{"ruleId":"43","severity":1,"message":"52","line":6,"column":25,"nodeType":"45","messageId":"46","endLine":6,"endColumn":41},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'cls' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateCountdown'. Either include it or remove the dependency array.","ArrayExpression",["55"],"'countdownDate' is assigned a value but never used.","'setCountdownDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [countdownDate, updateCountdown]",{"range":"58","text":"59"},[522,537],"[countdownDate, updateCountdown]"]