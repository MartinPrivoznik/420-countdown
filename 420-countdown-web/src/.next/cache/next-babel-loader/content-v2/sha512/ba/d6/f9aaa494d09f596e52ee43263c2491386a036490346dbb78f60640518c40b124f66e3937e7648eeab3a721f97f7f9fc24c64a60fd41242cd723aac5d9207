{"ast":null,"code":"import { useDispatch, useSelector } from \"react-redux\";\nimport toggleCountToPM from \"../actions/toggleCountToPM\";\nimport updateCountdownDate from \"../actions/updateCountdownDate\";\nimport updateRemainingTime from \"../actions/updateRemainingTime\";\nimport TimeModel from \"../models/TimeModel\";\n\nconst useTime = () => {\n  const dispatch = useDispatch();\n  const remainingTime = useSelector(state => state.remainingTime);\n  const countdownDate = useSelector(state => state.countdownDate);\n  const settings = useSelector(state => state.settingsReducer);\n\n  const setRemainingTime = time => {\n    dispatch(updateRemainingTime(time));\n  };\n\n  const setCountdownDate = countdownDate => {\n    dispatch(updateCountdownDate(countdownDate));\n  };\n\n  const toggleCountToPMSwitch = () => {\n    const newCountToPM = !settings.countToPM;\n    dispatch(updateCountdownDate(TimeModel.getCountdownDateTime(newCountToPM)));\n    dispatch(toggleCountToPM(newCountToPM));\n  };\n\n  return {\n    remainingTime,\n    countdownDate,\n    settings,\n    setRemainingTime,\n    setCountdownDate,\n    toggleCountToPMSwitch\n  };\n};\n\nexport default useTime;","map":{"version":3,"sources":["C:/Users/marti/Desktop/420-countdown-web/src/hooks/useTime.js"],"names":["useDispatch","useSelector","toggleCountToPM","updateCountdownDate","updateRemainingTime","TimeModel","useTime","dispatch","remainingTime","state","countdownDate","settings","settingsReducer","setRemainingTime","time","setCountdownDate","toggleCountToPMSwitch","newCountToPM","countToPM","getCountdownDateTime"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,aAAa,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,aAAlB,CAAjC;AACA,QAAME,aAAa,GAAGT,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,aAAlB,CAAjC;AACA,QAAMC,QAAQ,GAAGV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACG,eAAlB,CAA5B;;AAEA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACjCP,IAAAA,QAAQ,CAACH,mBAAmB,CAACU,IAAD,CAApB,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIL,aAAD,IAAmB;AAC1CH,IAAAA,QAAQ,CAACJ,mBAAmB,CAACO,aAAD,CAApB,CAAR;AACD,GAFD;;AAIA,QAAMM,qBAAqB,GAAG,MAAM;AAClC,UAAMC,YAAY,GAAG,CAACN,QAAQ,CAACO,SAA/B;AACAX,IAAAA,QAAQ,CAACJ,mBAAmB,CAACE,SAAS,CAACc,oBAAV,CAA+BF,YAA/B,CAAD,CAApB,CAAR;AACAV,IAAAA,QAAQ,CAACL,eAAe,CAACe,YAAD,CAAhB,CAAR;AACD,GAJD;;AAMA,SAAO;AACLT,IAAAA,aADK;AAELE,IAAAA,aAFK;AAGLC,IAAAA,QAHK;AAILE,IAAAA,gBAJK;AAKLE,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA5BD;;AA8BA,eAAeV,OAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport toggleCountToPM from \"../actions/toggleCountToPM\";\r\nimport updateCountdownDate from \"../actions/updateCountdownDate\";\r\nimport updateRemainingTime from \"../actions/updateRemainingTime\";\r\n\r\nimport TimeModel from \"../models/TimeModel\";\r\n\r\nconst useTime = () => {\r\n  const dispatch = useDispatch();\r\n  const remainingTime = useSelector((state) => state.remainingTime);\r\n  const countdownDate = useSelector((state) => state.countdownDate);\r\n  const settings = useSelector((state) => state.settingsReducer);\r\n\r\n  const setRemainingTime = (time) => {\r\n    dispatch(updateRemainingTime(time));\r\n  };\r\n\r\n  const setCountdownDate = (countdownDate) => {\r\n    dispatch(updateCountdownDate(countdownDate));\r\n  };\r\n\r\n  const toggleCountToPMSwitch = () => {\r\n    const newCountToPM = !settings.countToPM;\r\n    dispatch(updateCountdownDate(TimeModel.getCountdownDateTime(newCountToPM)));\r\n    dispatch(toggleCountToPM(newCountToPM));\r\n  };\r\n\r\n  return {\r\n    remainingTime,\r\n    countdownDate,\r\n    settings,\r\n    setRemainingTime,\r\n    setCountdownDate,\r\n    toggleCountToPMSwitch,\r\n  };\r\n};\r\n\r\nexport default useTime;\r\n"]},"metadata":{},"sourceType":"module"}